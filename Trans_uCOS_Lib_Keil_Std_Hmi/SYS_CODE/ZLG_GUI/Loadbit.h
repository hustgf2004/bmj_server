/****************************************************************************************
* 文件名：LOADBIT.H
* 功能：显示单色图形及汉字显示。(头文件)
* 作者：黄绍斌
* 日期：2004.02.26
* 备注：
****************************************************************************************/
#ifndef  LOADBIT_H
#define  LOADBIT_H

#define     FONT_XSIZE8         8
#define     FONT_XSIZE16        16
#define     FONT_YSIZE16        16

/*********************************************************************************************************
* 名称：GUI_Initialize()
* 功能：初始化GUI，包括初始化显示缓冲区，初始化LCM并清屏。
* 入口参数：uiBrightness:亮度(0~0xFF)
**          uiContrast: 对比度(0~0xFF)
* 出口参数：无
* 说明：用户根据LCM的实际情况编写此函数。
*********************************************************************************************************/
//extern void  GUI_Initialize(INT32U uiBrightness, INT32U uiContrast);

/*********************************************************************************************************
* 名称：GUI_BrightnessSet()
* 功能：亮度调节
* 入口参数：uiBrightness:亮度(0~0xFF)
* 出口参数：无
* 说明：用户根据LCM的实际情况编写此函数。
*********************************************************************************************************/
//extern void  GUI_BrightnessSet(INT32U uiBrightness);

/*********************************************************************************************************
* 名称：GUI_ContrastSet()
* 功能：对比度调节
* 入口参数：uiContrast: 对比度(0~0xFF)
* 出口参数：无
* 说明：用户根据LCM的实际情况编写此函数。
*********************************************************************************************************/
//extern void  GUI_ContrastSet(INT32U uiContrast);

/*********************************************************************************************************
* 名称：GUI_FillSCR()
* 功能：全屏填充。直接使用数据填充显示缓冲区。
* 入口参数：dat		填充的数据
* 出口参数：无
* 说明：用户根据LCM的实际情况编写此函数。
*********************************************************************************************************/
extern void  GUI_FillSCR(TCOLOR dat);    

/*********************************************************************************************************
* 名称：GUI_ClearSCR()
* 功能：清屏。
* 入口参数：无
* 出口参数：无
* 说明：用户根据LCM的实际情况编写此函数。
*********************************************************************************************************/
extern void  GUI_ClearSCR(void);

/*********************************************************************************************************
* 名称：GUI_ClearRectangle()
* 功能：清屏矩形区域
* 入口参数：x0		水平线起点所在列的位置
*           y0		水平线起点所在行的位置
*           x1      水平线终点所在列的位置
* 出口参数：无
* 说明：用户根据LCM的实际情况编写此函数。
*********************************************************************************************************/
extern void  GUI_ClearRectangle(uint32 x0, uint32 y0, uint32 x1, uint32 y1);

/****************************************************************************
* 名称：GUI_LoadPic()
* 功能：输出单色图形数据，反白显示。
* 入口参数： x		指定显示位置，x坐标
*           y		指定显示位置，y坐标
*           dat		要输出显示的数据
*           hno     要显示此行的点个数
*           lno     要显示此列的点个数
* 出口参数：无
* 说明：操作失败原因是指定地址超出有效范围。
****************************************************************************/
extern  void  GUI_LoadPic(uint32 x, uint32 y, uint8 *dat, uint32 hno, uint32 lno);


                    


/****************************************************************************
* 名称：GUI_LoadPic1()
* 功能：输出单色图形数据，反相显示。
* 入口参数： x		指定显示位置，x坐标
*           y		指定显示位置，y坐标
*           dat		要输出显示的数据
*           hno     要显示此行的点个数
*           lno     要显示此列的点个数
* 出口参数：无
* 说明：操作失败原因是指定地址超出有效范围。
****************************************************************************/
extern  void  GUI_LoadPic1(uint32 x, uint32 y, uint8 *dat, uint32 hno, uint32 lno);


/****************************************************************************
* 名称：GUI_PutHZ()
* 功能：显示汉字。
* 入口参数： x		指定显示位置，x坐标
*           y		指定显示位置，y坐标
*           dat		要输出显示的汉字点阵数据
*           hno     要显示此行的点个数
*           lno     要显示此列的点个数
* 出口参数：无
* 说明：操作失败原因是指定地址超出有效范围。
****************************************************************************/
//extern  void  __GUI_PutHZ(uint32 x, uint32 y, uint8 *dat, uint8 hno, uint8 lno);

/****************************************************************************
* 名称：GUI_Printf()
* 功能：打印输出。
* 入口参数：uiXPoint		指定显示位置，x坐标
*           uiYPoint		指定显示位置，y坐标
*           ucIsAnti		是否反显
*           pcString        格式字符串
* 出口参数：无
* 说明：操作失败原因是指定地址超出有效范围。
****************************************************************************/
extern  void GUI_Printf(unsigned int uiXPoint, 
                        unsigned int uiYPoint, 
                        INT8U ucIsAnti, 
                        const char * pcString,...);

/****************************************************************************
* 名称：GUI_PrintfEx()
* 功能：打印输出。
* 入口参数：uiCol		    指定显示位置，列起始值
*           uiLine		    指定显示位置，行起始值
*           ucIsAnti		是否反显
*           pcString        格式字符串
* 出口参数：无
* 说明：操作失败原因是指定地址超出有效范围。
****************************************************************************/
extern  void GUI_PrintfEx (unsigned int uiCol, 
                           unsigned int uiLine, 
                           INT8U ucIsAnti, 
                           char * pcString,...);

/*********************************************************************************************************
** Function name:           GUI_Refresh
** Descriptions:            液晶实时刷新
** input parameters:        ix0     x side coordinate of the first pixel
**                          iy0     y side coordinate of the first pixel
**                          iwidth  x side width
**                          ilength y side length
** output parameters:       none
** Returned value:          none
*********************************************************************************************************/
INT32S GUI_Refresh(int ix0, 
                   int iy0,                  
                   int iwidth, 
                   int ilength);
                   
                   
extern void GUI_DispString(unsigned char ucX, 
                            unsigned char ucY, 
                            unsigned char ucIsAnti, 
                            unsigned char *pStr);  
                            
extern void GUI_DispStringH(unsigned char ucX, 
                            unsigned char ucY, 
                            unsigned char *str);                                             
extern INT32U __GuiFontAddr;
#endif
